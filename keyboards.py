from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# Main Menu
main_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìö –£—á–∏—Ç—å —Å–ª–æ–≤–∞"), KeyboardButton(text="üéÆ –ò–≥—Ä—ã")],
        [KeyboardButton(text="üìù –¢–µ—Å—Ç –∑–Ω–∞–Ω–∏–π"), KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
        [KeyboardButton(text="‚ùì –°–ø—Ä–∞–≤–∫–∞"), KeyboardButton(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç")],
        [KeyboardButton(text="‚¨ÜÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

cancel_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_audio_upload")]
])

# Learn Words
learn_words_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ"), KeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ")],
        [KeyboardButton(text="‚¨ÜÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# Games Menu
games_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="ü§î –í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥"), KeyboardButton(text="üîç –ù–∞–π–¥–∏ –±—É–∫–≤—É")],
        [KeyboardButton(text="üß© –°–æ–±–µ—Ä–∏ —Å–ª–æ–≤–æ"), KeyboardButton(text="üéß –£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ")],
        [KeyboardButton(text="üìù –í–≤–æ–¥ –ø–æ –ø–∞–º—è—Ç–∏"), KeyboardButton(text="‚¨ÜÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# Back to main menu - This keyboard is now redundant as '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' is in main_menu_keyboard
# I will remove it and update its usages.

def quiz_options_keyboard(options: list[str], correct_option: str):
    """Generates an InlineKeyboardMarkup for quiz options in a 2-column layout with pictograms."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    row = []
    for i, option in enumerate(options):
        # Store options in state and use index for callback_data
        callback_data = f"quiz_answer_{i}_{'correct' if option == correct_option else 'incorrect'}"
        row.append(InlineKeyboardButton(text=f"‚ñ™Ô∏è {option}", callback_data=callback_data))
        if len(row) == 2 or i == len(options) - 1:
            keyboard.inline_keyboard.append(row)
            row = []
    return keyboard

start_recall_typing_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="start_recall_typing_countdown")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å–ª–æ–≤
confirm_create_set_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–î–∞, —Å–æ–∑–¥–∞—Ç—å –º–æ–π –Ω–∞–±–æ—Ä!", callback_data="create_my_word_set")],
    [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_create_word_set")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –Ω–∞–±–æ—Ä–æ–º —Å–ª–æ–≤
my_set_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ", callback_data="add_my_word")],
    [InlineKeyboardButton(text="‚ûñ –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ", callback_data="del_my_word")],
    [InlineKeyboardButton(text="üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤", callback_data="show_my_word_list")],
    [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–∞–±–æ—Ä", callback_data="delete_my_word_set")],
    [InlineKeyboardButton(text="‚¨ÜÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_from_my_set")]
])

def create_file_selection_keyboard(available_files: list[str], current_file: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç InlineKeyboardMarkup –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ —Å–ª–æ–≤–∞–º–∏."""
    keyboard = []
    for file in available_files:
        text = f"{file} ‚úÖ (—Ç–µ–∫—É—â–∏–π)" if file == current_file else file
        keyboard.append([InlineKeyboardButton(text=text, callback_data=f"select_file_{file}")])
    
    keyboard.append([InlineKeyboardButton(text="‚¨ÜÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_from_my_set_select_file")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∞—É–¥–∏–æ
cancel_keyboard_for_filename = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_audio_upload")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å–ª–æ–≤
delete_my_set_confirm_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirm_delete_my_word_set")],
    [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete_my_word_set")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤
cancel_add_del_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add_del_word")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
confirm_broadcast_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å")],
        [KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]
    ],
    resize_keyboard=True,
    one_time_keyboard=True
)
